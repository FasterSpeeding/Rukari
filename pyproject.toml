[build-system]
requires = ["maturin>=0.12,<1.9"]
build-backend = "maturin"

[project]
name = "rukari"
version = "0.1.0"
requires-python = ">=3.11,<3.12"
license = {file = "LICENSE"}
authors = [ {name = "Faster Speeding", email="lucina@lmbyrne.dev"} ]
dependencies = ["anyio~=3.6", "hikari~=2.0.0.dev109"]

[project.urls]
Homepage = "https://github.com/FasterSpeeding/Rukari"
Repository = "https://github.com/FasterSpeeding/Rukari"
Documentation = "https://github.com/FasterSpeeding/Rukari/blob/master/README.md"

[tool.black]
line-length     = 120
target-version  = ["py311"]
include         = ".*pyi?$"

[tool.codespell]
ignore-regex = "crate"

[tool.flake8]
accept-encodings = "utf-8"
count = true
docstring-convention = "numpy"
eradicate-aggressive = true
# extend-select = ["TC100", "TC101"]
force-future-annotations = true
ignore-decorators = "overload"
max-complexity = 20
max-function-length = 100
# Technically this is 120, but black has a policy of "1 or 2 over is fine if it is tidier", so we have to raise this.
max-line-length = 130
min_python_version = "3.11"
pep585-activation = "always"
show_source = false
statistics = false
ignore = ["CFQ002", "D102", "E402", "INP001"]
per-file-ignores = [
    "noxfile.py: D100, D102, FA101, F401, F403, INP001",
    "*.pyi: D100, D101, E301, E302, E704, FA101",
    "noxfile.py: INP001",
]

[tool.isort]
profile = "black"
force_single_line = true

[tool.mypy]
# some good strict settings
python_version = "3.11"
strict = true
warn_unreachable = true

# more narrow type ignores
show_error_codes = true

[tool.piped]
default_sessions = ["reformat", "verify-markup", "spell-check", "type-check", "verify-types"]
hide = [
    "build",
    "generate-docs",
    "publish",
    "slot-check",
    "test",
    "test-publish",
    "test-coverage",
]
project_name = "rukari"
top_level_targets = ["./noxfile.py", "./rukari.pyi"]

[tool.piped.github_actions."*"]
REQUIRES_RUST = "true"

[tool.piped.github_actions.clippy]
[tool.piped.github_actions.freeze_for_pr]
[tool.piped.github_actions.lint]
[tool.piped.github_actions.reformat]
[tool.piped.github_actions.resync_piped]
[tool.piped.github_actions.rustfmt]
[tool.piped.github_actions.type_check]
[tool.piped.github_actions.update_licence]
[tool.piped.github_actions.upgrade_locks]
[tool.piped.github_actions.verify_locks]
[tool.piped.github_actions.verify_types]

[tool.pyright]
include = ["noxfile.py", "rukari.pyi"]

pythonVersion = "3.11"
typeCheckingMode = "strict"
reportMissingModuleSource = "error"  # Is only "warning" on strict mode.

# Error code which are disabled even when general strict.
reportShadowedImports = "error"
reportCallInDefaultInitializer = "none"  # Ended up just complaining about cases where this was fine (e.g. timedeltas).
reportImplicitStringConcatenation = "none"  # Conflicts with flake8 config.
reportMissingSuperCall = "none"  # Way too strict (requires calls to `object.__init__`).
reportPropertyTypeMismatch = "error"
reportUninitializedInstanceVariable = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "none"  # Enforces doing `_ = ...`.
